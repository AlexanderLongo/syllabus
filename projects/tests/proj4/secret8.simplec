int power(int b, int p)
{
	int x;
	x = 1;
	
	if (p < 1) 
	{
		return 1;
	}
	
	while (p > 1)
	{
		x = (x * b);
		p = (p - 1);
	}
	return x;
}

int digitcount(int param)
{
	if (param < 0)
	{
		return digitcount(param - 1);
	} 
	else if ((param > 0) && (param < 10))
	{
		return 1;
	}
	else 
	{
		return digitcount(param/10);
	}
}

int palindrome(int pal)
{
	int num1;
	int num2;
	if (pal == 0)
	{
		print false;
		return 0;
	}
	
	if (digitcount(pal) == 1)
	{
		print true;
		return 1;
	} 
	else if (digitcount(pal) == 2)
	{
		pal = (pal % 10);
		return(pal / 10);
	} 
	else 
	{
		num1 = (pal/power(10, digitcount(pal)));
		num2 = pal % 10;
	}
	
	if ((num1 > num2) || (num1 < num2))
	{
		print false;
		return 0;
	} 
	else 
	{
		pal = (pal - (num1 * (power(10, digitcount(pal))))/ 10);
		return palindrome(pal);
	}
}

int main() 
{

	int a;
	int b;
	int c;
	int d;
	int e;
	int f;
	int g;
	a = 32323;
	b = 212;
	c = 23123;
	d = 777;
	e = 12212;
	f = 12321;
	g = 0;
	palindrome(a);
	palindrome(b);
	palindrome(c);
	palindrome(d);
	palindrome(e);
	palindrome(f);
	palindrome(g);

}
